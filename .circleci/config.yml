---
version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/ruby:2.5.3
      environment:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres@localhost:5432/d2live_test
    - image: circleci/postgres:9.5-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: d2live_test
jobs:
  bundle:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --jobs=4 --retry=2 --path=vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: .
          paths: vendor/bundle
  rubocop:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle --path vendor/bundle
      - run: bundle exec rubocop
  rspec:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle --path vendor/bundle
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bin/rails db:schema:load --trace
      - run: bundle exec rspec -O .rspec
  deploy:
    machine:
      services:
        - docker
    working_directory: ~/repo
    steps:
      - checkout
      - run: |
          docker build -t d2live_image .
          docker build -t web -f Dockerfile.web .
          docker build -t worker -f Dockerfile.worker .
          docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
          docker tag web registry.heroku.com/$APP_NAME/web
          docker tag worker registry.heroku.com/$APP_NAME/worker
          docker push registry.heroku.com/$APP_NAME/web
          docker push registry.heroku.com/$APP_NAME/worker
          export WEB_DOCKER_IMAGE_ID=$(docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}})
          export WORKER_DOCKER_IMAGE_ID=$(docker inspect registry.heroku.com/$APP_NAME/worker --format={{.Id}})
          curl -n -X PATCH https://api.heroku.com/apps/$APP_NAME/formation \
            -d '{
            "updates": [
              {
                "type": "web",
                "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'"
              },
              {
                "type": "worker",
                "docker_image": "'"$WORKER_DOCKER_IMAGE_ID"'"
              }
            ]
          }' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer $HEROKU_API_KEY"
workflows:
  version: 2
  check-and-deploy:
    jobs:
      - bundle
      - rubocop:
          requires:
            - bundle
      - rspec:
          requires:
            - bundle
      - deploy:
          requires:
            - rubocop
            - rspec
          filters:
            branches:
              only: master
